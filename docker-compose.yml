version: '2'

services:
  
    grafana:
        image: grafana/grafana
        container_name: grafana
        restart: always
        environment:
            GF_RENDERING_SERVER_URL: http://renderer:8081/render
            GF_RENDERING_CALLBACK_URL: http://grafana:3000/
            GF_LOG_FILTERS: rendering:debug
            GF_INSTALL_PLUGINS: grafana-clock-panel,flant-statusmap-panel,vonage-status-panel
        volumes: 
            - grafana_data:/var/lib/grafana
            - grafana_datasources:/etc/grafana/provisioning/datasources
            - grafana_dashboards:/etc/grafana/provisioning/dashboards
      
    renderer:
        image: grafana/grafana-image-renderer
        container_name: grafana-renderer
        restart: always
        environment:
            ENABLE_METRICS: 'true'
  
    graphite:
        image: sitespeedio/graphite
        container_name: graphite
        ports:
            - 10.0.0.3:2003:2003
        volumes:
            - ./storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf

    letsencrypt:
        image: linuxserver/letsencrypt
        container_name: letsencrypt
        ports:
            - 443:443
            - 80:80
        volumes:
            - ./default:/config/nginx/site-confs/default
        #    - letsencrypt_etc:/etc
        restart:
            always
        depends_on:
            - grafana
            - graphite
        environment:
            - PUID=1050
            - PGID=1050
            - EMAIL=analogwurst-1@yahoo.de
            - ONLY_SUBDOMAINS=true
            - SUBDOMAINS=grafana
            - URL=stiefels.biz
            - TZ=Europe/Berlin
            - STAGING=true

    graphitecollectd:
        image: pboos/collectd-graphitecollectd-graphite
        container_name: collectd
        privileged: true
        restart:
            always
        volumes:
            - /:/hostfs:ro
        depends_on:
            - graphite
        network: host
        environment:
            - HOST_NAME=monitoring
            - GRAPHITE_HOST=10.0.0.3
            
 docker run -d  --net=host --privileged


volumes:
    grafana_data: {}
    grafana_datasources: {}
    grafana_dashboards: {}
    letsencrypt_etc: {}